Parameters - build parameters, like do you want to build prod, qa or test
->something like build param before the code runs?
Environment variables - use them in jenkinsfile
->environment variables that you run in your stages, during code run.
->something like vars within code run
->https://stackoverflow.com/questions/50398334/what-is-the-relationship-between-environment-and-parameters-in-jenkinsfile-param



1)Pipeline syntax
-Jenkinsfile can be written as
-scripted pipeline, or,
-declarative pipeline

1a)Scripted pipeline
-first syntax of jenkinsfile
-allows writing of the whole configuration of the whole jenkinsfile
->using only groovy script
    ->will have node {
                      //code blokc
                      {
-difficult to start with for people who dont know how to use groovy

1b)Declarative pipeline
-recent addition
-easier to get started for people who dont know groovy script
-not that powerful
-pre-defined structure

2)REQUIRED FIELDS OF JENKINSFILE
a)"Pipeline" must be top-level
b)"agent" - where to execute
c)"build" - stage
d)"test" - stage
e)"deploy" - stage

-inside each stage, there will be steps
-for eg,
-<echo 'building the application...'>
-<echo 'testing the application...'>
<echo 'deploying the application...'>

define post attribute after all the stages are done
post{
    always {
    //this logic will always be executed, regardless of whether build failed or succeeded
    }
    success{
    //things that will happen only if success
    }
    failiure{
    //things that will happen only if fail, etc post to slack etc
    }
}

-define expression or conditions for each STAGE
-for example you only want to run the test on development test branch build
-Inside stage block, define when expressions
->when this stage should be build
-When {
        expression{
        //boolean experssion here
        //branch name or current active branch name in the build
        //is always available in jenkinsfile throguh
        //an enviromental variable that jenkins provide
        //enviroment variable is called branch name
        //BRANCH_NAME = ..
        //env.BRANCH_NAMe
        //BRANCH_NAME == 'dev'
        ^ this will only execute if it isin the dev branch
        //can use ||, && too
        //can only say CODE_CHANGES == true
        //self defined var before code run
        }
       }

3)ENVIRONMENTAL VARIABLE
-how to find what variables are available from jenkins?
-see at "/env-vars.html"
    ->from jenkins url
    ->need to run jenkins file first?
-attribute called environment
->all the environmental variables defined in environment
    ->will be available for all the stages in the pipeline
-how to use environmental var in your script?
-> environment{
                NEW_VERSION = '1.3.0'
                }
->echo "building version ${NEW_VERSION}"
->" double quotes means as string
->"this is saying that this is a string"
->' single quotes means as groovy
->'this is saying that this is groovy'

3b)using credentials in jenkinsfile

3c)tools
-access build tools for your project
    ->yarn
    ->maven
    ->gradle
    ->js
tools {
        xxx
        }
echo ''
sh ""
-only 3 build tools available for jenknis now :
(a)gradle
(b)maven
(c)jdk
if you want yarn or npm, you need to do it in other way
->search "configure build tools in jenkins"

4)parameters
parameters{
//define the selection
    string(name: 'version', default value : '', description :'')
    choice(name: 'version', choices:['1.1.0', '1.2.0', '1.3.0'], description:'')
    booleanParam(name: 'executeTests', defaultValue:true, description:''_
    //type of parameter (name: <xx>, default or choice of version:<xy>, description:'if any')


5)groovy function
->load groovy script in stage init
->load the CD or CI groovy script
->